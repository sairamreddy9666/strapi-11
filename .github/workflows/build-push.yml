name: Build & Push Docker Image

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Create ECR repository if it doesn't exist
      run: |
        if ! aws ecr describe-repositories --repository-names sairam-strapi-ecr --region ap-south-1 > /dev/null 2>&1; then
          echo "Repository not found â€” creating sairam-strapi-ecr..."
          aws ecr create-repository --repository-name sairam-strapi-ecr --region ap-south-1
        else
          echo "Repository already exists."
        fi

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker image
      run: docker build -t strapi-app:latest .

    - name: Set commit SHA
      run: echo "COMMIT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV

    - name: Tag Docker image
      run: |
        docker tag strapi-app:latest 242201300764.dkr.ecr.ap-south-1.amazonaws.com/sairam-strapi-ecr:latest
        docker tag strapi-app:latest 242201300764.dkr.ecr.ap-south-1.amazonaws.com/sairam-strapi-ecr:$COMMIT_SHA

    - name: Push Docker image to ECR
      run: |
        docker push 242201300764.dkr.ecr.ap-south-1.amazonaws.com/sairam-strapi-ecr:latest
        docker push 242201300764.dkr.ecr.ap-south-1.amazonaws.com/sairam-strapi-ecr:$COMMIT_SHA

    - name: Delete old images (keep only latest)
      run: |
        REPO_NAME="sairam-strapi-ecr"
        REGION="ap-south-1"
        ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        REPO_URI="$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPO_NAME"

        echo "Fetching all images except the latest..."
        OLD_IMAGES=$(aws ecr list-images \
          --repository-name $REPO_NAME \
          --region $REGION \
          --query 'imageIds[?imageTag!=`latest`]' \
          --output json)

        if [ "$OLD_IMAGES" != "[]" ]; then
          echo "Deleting old images..."
          aws ecr batch-delete-image \
            --repository-name $REPO_NAME \
            --region $REGION \
            --image-ids "$OLD_IMAGES"
          echo "âœ… Old images deleted successfully!"
        else
          echo "ðŸ†— No old images found to delete."
        fi

    - name: Success message
      run: echo "âœ… Image pushed successfully and old images cleaned up!"

    - name: Set output IMAGE_URI
      id: set_image_uri
      run: echo "IMAGE_URI=242201300764.dkr.ecr.ap-south-1.amazonaws.com/sairam-strapi-ecr:${GITHUB_SHA}" >> $GITHUB_OUTPUT
